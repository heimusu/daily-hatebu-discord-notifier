name: Daily Random Hatena Bookmark
on:
  schedule:
    - cron:  '0 22 * * *'     # JST 07:00
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install deps
        run: npm install rss-parser axios

      - name: Pick & notify Discord
        env:
          RSS_URL: "https://b.hatena.ne.jp/${{ secrets.HATEBU_USER }}/bookmark.rss"
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          node <<'JS'
          const axios  = require('axios');
          const Parser = require('rss-parser');

          (async () => {
            const res = await axios.get(process.env.RSS_URL, { responseType: 'text', maxRedirects: 5 });
            // HTML „ÅåËøî„Å£„Å¶Êù•„Çã„Å®ÂÖàÈ†≠„Åå <html „Å´„Å™„Çã
            if (!/^<\?xml|^<rdf:RDF|^<rss/i.test(res.data.trim())) {
              throw new Error(`Not RSS ‚Äì URL or privacy setting„ÅåÈÅï„ÅÑ„Åæ„Åô\nURL=${process.env.RSS_URL}`);
            }

            const parser = new Parser();
            const feed   = await parser.parseString(res.data);

            if (!feed.items?.length) throw new Error('ÂÖ¨Èñã„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„Åå 0 ‰ª∂„Åß„Åô');
            const pick = feed.items[Math.floor(Math.random() * feed.items.length)];

            await axios.post(process.env.DISCORD_WEBHOOK_URL, {
              username: 'Hatena Random',
              avatar_url: 'https://b.hatena.ne.jp/favicon.ico',
              embeds: [{ title: pick.title, url: pick.link, description: 'üé≤ ‰ªäÊó•„ÅÆ„ÅØ„Å¶„Éñ' }]
            });
            console.log('Sent:', pick.title);
          })().catch(e => { console.error('FAIL', e.message); process.exit(1); });
          JS

