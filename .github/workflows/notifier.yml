name: Daily Random Hatena Bookmark
on:
  schedule:
    - cron:  '0 22 * * *'     # JST 07:00
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install deps
        run: npm install rss-parser axios

      - name: Pick & notify Discord
        env:
          RSS_URL: "https://b.hatena.ne.jp/${{ secrets.HATEBU_USER }}/rss"
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          node <<'JS'
          const axios   = require('axios');
          const Parser  = require('rss-parser');

          // "&" → "&amp;" にサニタイズするユーティリティ
          const fixBrokenEntities = (xml) =>
            xml.replace(/&(?!#?\w+;)/g, '&amp;');

          (async () => {
            // 1. RSS 文字列を取得
            const raw = (await axios.get(process.env.RSS_URL)).data;

            // 2. “壊れた &” を修正
            const safeXml = fixBrokenEntities(raw);

            // 3. パース（文字列 → フィードオブジェクト）
            const parser = new Parser();           // デフォルト設定で OK
            const feed   = await parser.parseString(safeXml);

            // 4. ランダム抽出
            const pick = feed.items[Math.floor(Math.random()*feed.items.length)];

            // 5. Discord へ通知
            await axios.post(process.env.DISCORD_WEBHOOK_URL, {
              username: "Hatena Random",
              avatar_url: "https://b.hatena.ne.jp/favicon.ico",
              embeds: [{
                title: pick.title,
                url:   pick.link,
                description: "🎲 今日のはてブ",
                footer: { text: "提供: GitHub Actions" }
              }]
            });
            console.log(`Sent: ${pick.title}`);
          })().catch(err => {
            console.error('FAIL', err);
            process.exit(1);
          });
          JS

